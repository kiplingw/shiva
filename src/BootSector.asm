; Pre-procs...

    ; System starts up in 16 bit mode...
    [BITS 16]

    ; BIOS loads boot sector at 00:7c00h and executes...
    [ORG 0x7c00]

    ; Number of sectors system occupies...
    SYSTEM_SECTORS  EQU 6
    
    ; Boot sector signature...
    BOOT_SIGNATURE  EQU 0xAA55
    
    ; To-do...
    ; *** Enable A-20 line ***

; Entry point...
EntryPoint:

    ; Jump passed boot record data...
    jmp short start
    nop
    times 0x3B db 0

; Start...
start:

    ; Variables...
    DriveNumber db  0x00

    ; Remember drive number...
    mov [DriveNumber], dl
    
    ; Initialize segment registers...
    .InitSegmentRegisters
    mov ax, 0000h
    mov ds, ax

    ; Switch video mode to 320 x 240 at 256 colors...
    mov ah, 00h
    mov al, 13h
    int 10h

    ; Load system...

        ; Reset drive first... (drive # already in dl)
        DriveReset:

            ; Remember how many attempts...
            inc byte [Attempts]
            
            ; Tried too many damn times...
            cmp byte [Attempts], 4
            je  FailMiserably
            
            ; Alert user...
            mov si, szLoadKernel
            call Print

            ; Reset...
            mov dl, byte [DriveNumber]
            mov ah, 0           ; Request drive reset...
            int 13h             ; Reset...

                ; Failed, try again...
                jc DriveReset
            
        ; Read from disk to memory...
        
            ; Prepare to load to 01000h, or 1 meg...
            mov ax, 0000h
            mov es, ax
            mov bx, 0x1000
            
            ; Read...
            mov ah, 02h             ; Request read...
            mov al, SYSTEM_SECTORS  ; # of sectors to load... (Must be exact for VMWare)
            mov ch, 00h             ; Cylinder zero...
            mov cl, 02h             ; Sector following boot record... (remember, they start at 1, not 0)
            mov dh, 00h             ; Disk head number...
            mov dl, [DriveNumber]   ; Drive number...
            int 13h                 ; Do it...
                
                ; Failed, try again...
                jc  DriveReset

    ; Initialize 32-bit protected mode...

        ; Disable interrupts...
        cli
        
        ; Initialize global descriptor table...
        xor     ax, ax
        mov     ds, ax
        lgdt    [gdt_desc]
        
        ; Enable protected mode...
        mov     eax, cr0
        or      eax, 1
        mov     cr0, eax
        
    ; Transfer control to 32-bit code segment and clear flush 
    ; instruction queue because this is a far jump...
        
        ; Go...
        jmp 08h:FlushQueue

; Print string...
Print:
    
    ; Initialize...
    mov ah, 0eh     ; Display chacter in teletype mode...
    mov bh, 00h     ; Page zero...
    mov bl, 07h     ; Normal text attribute...

    ; Print character...
    .NextChar
        
        ; Load string...
        lodsb
        
        ; Check for end of string...
        or al, al   ; Check for end of string...
        jz .Done    ; If the zero flag has been set go to the end of the procedure.

        ; Output character...
        int 10h
 
        ; Seek to next character...
        jmp .NextChar

    ; Done...
    .Done
        ret

; Fail miserably...
FailMiserably:

    ; Alert user...
    mov si, szFailed
    call Print
    
    ; Spin the clock...
    .Spin
        
        ; Kill interrupts...
        cli
        
        ; Stop this cycle...
        hlt
        
        ; Do it again...
        jmp .Spin

; Data...

    ; Greetings...
    szLoadKernel    db  '] VOS initializing...', 13, 10, 0
    szFailed        db  '] Disk I/O error...', 13, 10, 0
    Attempts        db  0

    ; Directory entry...
    DirectoryEntry:

        Name            times 8     db  0
        Extension       times 3     db  0
        Attribute       times 1     db  0
        Reserved        times 10    db  0
        TimeOfDay       times 2     db  0
        TimeOfDate      times 2     db  0
        StartingCluster times 2     db  0
        Size            times 4     db  0

; Cool 32-bit code...
[BITS 32]

; Purge processors instruction queue because it has junk 16-bit code in it...
FlushQueue:

    ; Initialize segment registers...
    
        ; Data segment...
        mov ax, 10h
        mov ds, ax
        
        ; Stack segment...
        mov ss, ax
        mov esp, 090000h
        
        ; Transfer control to our C++ system...
        jmp 08h:01000h

; Global description table...
gdt:
    
    ; Null segment, reserved by Intel...
    gdt_null:
        
        dd 0
        dd 0

    ; Code segment with read / execute privledges, non conforming...
    gdt_code:
        
        dw 0FFFFh           ; Segment limit...
        dw 0                ; 24-bit segment physical address...
        db 0
        db 10011010b
        db 11001111b
        db 0

    ; Data segment with read / write privledges, expand down...
    gdt_data:
        
        dw 0FFFFh
        dw 0
        db 0
        db 10010010b
        db 11001111b
        db 0
    
    ; End of global description table...
    gdt_end:

; Global description table header...
gdt_desc:
    
    dw gdt_end - gdt - 1    ; Size
    dd gdt                  ; Pointer to GDT...

; Fill rest of sector with zeros except last two bytes with boot signature...
times 510-($-$$) db 0
dw BOOT_SIGNATURE